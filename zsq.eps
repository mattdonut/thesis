%!PS-Adobe-2.0 EPSF-2.0
%%Title: z.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Mar  8 12:24:50 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -100 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1890 900 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 900 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.02)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 1656 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 1656 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.025)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 2412 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 2412 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.03)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 3168 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 3168 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.035)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 3924 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 3924 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.04)]
] -100.0 MRshow
grestore
1.000 UL
LTb
1890 4680 M
63 0 V
4737 0 R
-63 0 V
stroke
1710 4680 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.045)]
] -100.0 MRshow
grestore
1.000 UL
LTb
2370 900 M
0 63 V
0 3717 R
0 -63 V
stroke
2370 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
grestore
1.000 UL
LTb
3330 900 M
0 63 V
0 3717 R
0 -63 V
stroke
3330 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 2)]
] -100.0 MCshow
grestore
1.000 UL
LTb
4290 900 M
0 63 V
0 3717 R
0 -63 V
stroke
4290 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 4)]
] -100.0 MCshow
grestore
1.000 UL
LTb
5250 900 M
0 63 V
0 3717 R
0 -63 V
stroke
5250 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 6)]
] -100.0 MCshow
grestore
1.000 UL
LTb
6210 900 M
0 63 V
0 3717 R
0 -63 V
stroke
6210 600 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 ( 8)]
] -100.0 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1890 900 M
4800 0 V
0 3780 V
-4800 0 V
0 -3780 V
LTb
300 2790 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (<z)]
[(Helvetica) 240.0 150.0 true true 0 (2)]
[(Helvetica) 300.0 0.0 true true 0 (>/N)]
] -130.0 MCshow
grestore
grestore
LTb
4290 150 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (L')]
] -100.0 MCshow
grestore
2.000 UP
2.000 UP
1.000 UL
LT0
LTb
5304 4467 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (32)]
] -100.0 MRshow
grestore
LT0
5484 4467 M
846 0 V
-846 31 R
0 -62 V
846 62 R
0 -62 V
2370 4383 M
260 -44 V
260 -411 V
259 -261 V
260 -576 V
260 -355 V
260 -40 V
260 -347 V
259 -150 V
260 -199 V
260 -277 V
260 -74 V
260 -41 V
260 -122 V
259 -9 V
260 -133 V
2370 4211 M
0 345 V
-31 -345 R
62 0 V
-62 345 R
62 0 V
229 -284 R
0 134 V
-31 -134 R
62 0 V
-62 134 R
62 0 V
229 -706 R
0 457 V
-31 -457 R
62 0 V
-62 457 R
62 0 V
228 -554 R
0 127 V
-31 -127 R
62 0 V
-62 127 R
62 0 V
229 -910 R
0 542 V
-31 -542 R
62 0 V
-62 542 R
62 0 V
229 -750 R
0 248 V
-31 -248 R
62 0 V
-62 248 R
62 0 V
229 -229 R
0 130 V
-31 -130 R
62 0 V
-62 130 R
62 0 V
229 -506 R
0 189 V
-31 -189 R
62 0 V
-62 189 R
62 0 V
228 -373 R
0 255 V
-31 -255 R
62 0 V
-62 255 R
62 0 V
229 -371 R
0 90 V
-31 -90 R
62 0 V
-62 90 R
62 0 V
229 -385 R
0 125 V
-31 -125 R
62 0 V
-62 125 R
62 0 V
229 -197 R
0 122 V
-31 -122 R
62 0 V
-62 122 R
62 0 V
229 -180 R
0 157 V
-31 -157 R
62 0 V
-62 157 R
62 0 V
229 -204 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
stroke
6007 1408 M
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
229 -284 R
0 166 V
-31 -166 R
62 0 V
-62 166 R
62 0 V
2370 4383 BoxF
2630 4339 BoxF
2890 3928 BoxF
3149 3667 BoxF
3409 3091 BoxF
3669 2736 BoxF
3929 2696 BoxF
4189 2349 BoxF
4448 2199 BoxF
4708 2000 BoxF
4968 1723 BoxF
5228 1649 BoxF
5488 1608 BoxF
5748 1486 BoxF
6007 1477 BoxF
6267 1344 BoxF
5907 4467 BoxF
2.000 UP
1.000 UL
LT1
LTb
5304 4167 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (64)]
] -100.0 MRshow
grestore
LT1
5484 4167 M
846 0 V
-846 31 R
0 -62 V
846 62 R
0 -62 V
-3960 74 R
260 -187 V
260 -104 V
259 -269 V
260 -630 V
260 -26 V
260 -269 V
260 -370 V
259 -79 V
260 -236 V
260 -116 V
260 -135 V
260 0 V
260 -77 V
259 -5 V
260 -23 V
2370 4056 M
0 307 V
-31 -307 R
62 0 V
-62 307 R
62 0 V
229 -518 R
0 356 V
-31 -356 R
62 0 V
-62 356 R
62 0 V
229 -568 R
0 571 V
-31 -571 R
62 0 V
-62 571 R
62 0 V
228 -802 R
0 496 V
-31 -496 R
62 0 V
-62 496 R
62 0 V
3409 2739 M
0 561 V
-31 -561 R
62 0 V
-62 561 R
62 0 V
229 -367 R
0 122 V
-31 -122 R
62 0 V
-62 122 R
62 0 V
229 -528 R
0 397 V
-31 -397 R
62 0 V
-62 397 R
62 0 V
229 -632 R
0 126 V
-31 -126 R
62 0 V
-62 126 R
62 0 V
228 -168 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
229 -314 R
0 102 V
-31 -102 R
62 0 V
-62 102 R
62 0 V
229 -221 R
0 108 V
-31 -108 R
62 0 V
-62 108 R
62 0 V
229 -300 R
0 221 V
-31 -221 R
62 0 V
-62 221 R
62 0 V
229 -181 R
0 142 V
-31 -142 R
62 0 V
-62 142 R
62 0 V
229 -205 R
0 115 V
-31 -115 R
62 0 V
-62 115 R
62 0 V
stroke
6007 1592 M
0 231 V
-31 -231 R
62 0 V
-62 231 R
62 0 V
229 -167 R
0 56 V
-31 -56 R
62 0 V
-62 56 R
62 0 V
2370 4210 Circle
2630 4023 Circle
2890 3919 Circle
3149 3650 Circle
3409 3020 Circle
3669 2994 Circle
3929 2725 Circle
4189 2355 Circle
4448 2276 Circle
4708 2040 Circle
4968 1924 Circle
5228 1789 Circle
5488 1789 Circle
5748 1712 Circle
6007 1707 Circle
6267 1684 Circle
5907 4167 Circle
2.000 UP
1.000 UL
LT2
LTb
5304 3867 M
gsave 0 setgray
[ [(Helvetica) 300.0 0.0 true true 0 (128)]
] -100.0 MRshow
grestore
LT2
5484 3867 M
846 0 V
-846 31 R
0 -62 V
846 62 R
0 -62 V
2370 3962 M
260 -291 V
260 151 V
259 -141 V
260 -96 V
260 -862 V
260 -244 V
260 -144 V
259 -135 V
260 47 V
260 -115 V
260 -185 V
260 -139 V
260 -81 V
259 -141 V
260 -80 V
2370 3672 M
0 580 V
-31 -580 R
62 0 V
-62 580 R
62 0 V
2630 3202 M
0 938 V
-31 -938 R
62 0 V
-62 938 R
62 0 V
229 -595 R
0 553 V
-31 -553 R
62 0 V
-62 553 R
62 0 V
228 -810 R
0 785 V
-31 -785 R
62 0 V
-62 785 R
62 0 V
229 -691 R
0 405 V
-31 -405 R
62 0 V
-62 405 R
62 0 V
3669 2264 M
0 918 V
-31 -918 R
62 0 V
-62 918 R
62 0 V
229 -894 R
0 381 V
-31 -381 R
62 0 V
-62 381 R
62 0 V
229 -524 R
0 380 V
-31 -380 R
62 0 V
-62 380 R
62 0 V
228 -495 R
0 340 V
-31 -340 R
62 0 V
-62 340 R
62 0 V
229 -191 R
0 135 V
-31 -135 R
62 0 V
-62 135 R
62 0 V
229 -416 R
0 469 V
-31 -469 R
62 0 V
-62 469 R
62 0 V
229 -510 R
0 180 V
-31 -180 R
62 0 V
-62 180 R
62 0 V
229 -304 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
229 -231 R
0 151 V
-31 -151 R
62 0 V
-62 151 R
62 0 V
stroke
6007 1342 M
0 488 V
-31 -488 R
62 0 V
-62 488 R
62 0 V
229 -510 R
0 373 V
-31 -373 R
62 0 V
-62 373 R
62 0 V
2370 3962 Star
2630 3671 Star
2890 3822 Star
3149 3681 Star
3409 3585 Star
3669 2723 Star
3929 2479 Star
4189 2335 Star
4448 2200 Star
4708 2247 Star
4968 2132 Star
5228 1947 Star
5488 1808 Star
5748 1727 Star
6007 1586 Star
6267 1506 Star
5907 3867 Star
1.000 UL
LTb
1890 900 M
4800 0 V
0 3780 V
-4800 0 V
0 -3780 V
2.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
